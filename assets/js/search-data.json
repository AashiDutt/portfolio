{
  
    
        "post0": {
            "title": "",
            "content": "In this tutorial, we are going to see how to embed a simple image preprocessing function within a trained model (tf.keras) while exporting it for serving. This is a useful feature to have because it can help us reduce a lot of boilerplate code needed while using any model for serving purposes. With this capability, you get a lot more flexibility and modularity to your model. . #collapse-hide # Import TenosrFlow and check version import tensorflow as tf print(tf.__version__) . . 2.2.0-rc2 . #collapse-hide # Other imports import matplotlib.pyplot as plt import numpy as np import cv2 . . Data loading, ~preprocessing~, and visualization . To keep things simple we will be using the FashionMNIST dataset. Note that these techniques can easily be applied to more complex models as well (with some limitation). . We are not going to preprocess the images before hand. We will let the model do it. . # Load data (x_train, y_train), (x_test, y_test) = tf.keras.datasets.fashion_mnist.load_data() . # Class labels (don&#39;t change the order) CLASSES = [&#39;T-shirt/top&#39;, &#39;Trouser&#39;, &#39;Pullover&#39;, &#39;Dress&#39;, &#39;Coat&#39;, &#39;Sandal&#39;, &#39;Shirt&#39;, &#39;Sneaker&#39;, &#39;Bag&#39;, &#39;Ankle boot&#39;] . # Show a few examples from the train set plt.figure(figsize=(10,10)) for i in range(25): plt.subplot(5,5,i+1) plt.xticks([]) plt.yticks([]) plt.grid(True) plt.imshow(x_train[i], cmap=plt.cm.binary) plt.xlabel(CLASSES[y_train[i]]) plt.show() . Model building and training . We are good to proceed towards building and training a neural network. We will first define a simple preprocessing function to scale the pixel values and then we will embed it into the model using a Lambda layer. You can replace this anything fancy you would want. . We will use a shallow network architecture so that we can train it quickly. . # Define the preprocessing function # We will embed it in the model later def preprocess_image(image_pixels): img = image_pixels / 255 return img # A humble model def get_training_model(): # Construct the model using the Functional API input_layer = tf.keras.layers.Input(shape=(28, 28), name=&quot;input_layer&quot;) preproc_layer = tf.keras.layers.Lambda(preprocess_image, name=&quot;lambda_layer&quot;)(input_layer) # Preprocessing function flatten = tf.keras.layers.Flatten()(preproc_layer) dense_1 = tf.keras.layers.Dense(128, activation=&quot;relu&quot;)(flatten) dropout = tf.keras.layers.Dropout(0.2)(dense_1) outputs = tf.keras.layers.Dense(len(CLASSES), activation=&quot;softmax&quot;)(dropout) # Create the model model = tf.keras.models.Model(input_layer, outputs) # Compile the model and return it model.compile(optimizer=&#39;adam&#39;, loss=&#39;sparse_categorical_crossentropy&#39;, metrics=[&#39;accuracy&#39;]) return model . # Topology of the model tf.keras.utils.plot_model(get_training_model(), show_shapes=True) . The Lambda layer is our preprocessing layer. . # Train the model for 10 epochs apparel_model = get_training_model() history = apparel_model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10, batch_size=128) . Epoch 1/10 469/469 [==============================] - 2s 5ms/step - loss: 0.5972 - accuracy: 0.7929 - val_loss: 0.4448 - val_accuracy: 0.8413 Epoch 2/10 469/469 [==============================] - 2s 4ms/step - loss: 0.4170 - accuracy: 0.8512 - val_loss: 0.4205 - val_accuracy: 0.8498 Epoch 3/10 469/469 [==============================] - 2s 4ms/step - loss: 0.3813 - accuracy: 0.8626 - val_loss: 0.3885 - val_accuracy: 0.8578 Epoch 4/10 469/469 [==============================] - 2s 4ms/step - loss: 0.3570 - accuracy: 0.8701 - val_loss: 0.3675 - val_accuracy: 0.8687 Epoch 5/10 469/469 [==============================] - 2s 4ms/step - loss: 0.3408 - accuracy: 0.8762 - val_loss: 0.3607 - val_accuracy: 0.8686 Epoch 6/10 469/469 [==============================] - 2s 4ms/step - loss: 0.3275 - accuracy: 0.8808 - val_loss: 0.3520 - val_accuracy: 0.8715 Epoch 7/10 469/469 [==============================] - 2s 4ms/step - loss: 0.3165 - accuracy: 0.8832 - val_loss: 0.3437 - val_accuracy: 0.8778 Epoch 8/10 469/469 [==============================] - 2s 4ms/step - loss: 0.3068 - accuracy: 0.8885 - val_loss: 0.3420 - val_accuracy: 0.8761 Epoch 9/10 469/469 [==============================] - 2s 4ms/step - loss: 0.2971 - accuracy: 0.8896 - val_loss: 0.3444 - val_accuracy: 0.8781 Epoch 10/10 469/469 [==============================] - 2s 4ms/step - loss: 0.2919 - accuracy: 0.8909 - val_loss: 0.3351 - val_accuracy: 0.8781 . Now that we have a trained model, we can go ahead and export it and then we will see how to use it on new images for inference. . Sample test image and model export . We are getting close. Now that we have a trained model here are the things we would do from here: . Serialize a randomly selected image from the test set. | Export the model and parse model predictions. | . Let&#39;s go. . Step 1: Serializing a randomly selected image from the test set . # Select a random image from the test set for serialization sampe_test_img_id = np.random.choice(x_test.shape[0], 1) sampe_test_img = x_test[sampe_test_img_id].squeeze() # Remove the batch dimension sampe_test_img = (sampe_test_img * 255).astype(&quot;int32&quot;) # Scale back to integer # Verify image label and shape print(&quot;Image class: &quot;,CLASSES[y_test[int(sampe_test_img_id)]]) print(sampe_test_img.shape) . Image class: Shirt (28, 28) . # Serialize the image cv2.imwrite(&quot;sample_image.png&quot;, sampe_test_img) . True . Note that while writing a grayscale image, OpenCV adds the channel dimension of 3 to it. We will need to handle carefully. . # Make sure the serialized image is good to go plt.imshow(plt.imread(&quot;sample_image.png&quot;), cmap=plt.cm.binary) plt.show() . Step 2: Model exporting and parsing predictions . Let&#39;s first serialize our model and load it. . # Serialize the model and load it apparel_model.save(&quot;apparel_model.h5&quot;) restored_model = tf.keras.models.load_model(&quot;apparel_model.h5&quot;) . WARNING:tensorflow:Error in loading the saved optimizer state. As a result, your model is starting with a freshly initialized optimizer. . This warning is not desirable. When the optimizer is loaded with a fresh state, the model predictions can be erroneous. So, to resolve this problem we will only be serializing the weights of the model with the save_weights() function. There can be other nuances like this when you work with Lambda layers and you can check this article out to know about them. . apparel_model.save_weights(&quot;apparel_model.h5&quot;) . We will now initialize a dummy model with the same architecture as the one we trained and we will then load the weights of our trained model into it. . restored_model = get_training_model() restored_model.load_weights(&quot;apparel_model.h5&quot;) . Now we should be good to go with the predictions part. First, let&#39;s load the image we serialized in step 1. As mentioned before, OpenCV adds 3-channels to grayscale images while saving them. We can take care of this issue with cv2.cvtColor(image_pixels, cv2.COLOR_BGR2GRAY). . # Load the image image_pixels = cv2.imread(&quot;sample_image.png&quot;) image_pixels = cv2.cvtColor(image_pixels, cv2.COLOR_BGR2GRAY) # Preview the image plt.imshow(image_pixels, cmap=plt.cm.binary) plt.show() . # Run inference and parse the prediction class_probabilities = restored_model.predict(np.expand_dims(image_pixels, 0))[0] print(&quot;Predicted &quot;,CLASSES[np.argmax(class_probabilities)]) . Predicted Shirt . We can see that it is working as expected. .",
            "url": "https://sayak.dev/2020/04/13/2020-04-12-_04_13_embedding_image_preprocessing_functions_in_a_-tf_keras-_model.html",
            "relUrl": "/2020/04/13/2020-04-12-_04_13_embedding_image_preprocessing_functions_in_a_-tf_keras-_model.html",
            "date": " • Apr 13, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I am Sayak (সায়ক). I am currently with PyImageSearch where I apply deep learning to solve real-world problems in computer vision and bring some of the solutions to edge devices. I am also responsible for providing Q&amp;A support to PyImageSearch readers. . Previously at DataCamp, I developed projects (here and here), and practice pools (here) for DataCamp. Prior to DataCamp, I have worked at TCS Research and Innovation (TRDDC) on Data Privacy. There, I was a part of TCS’s critically acclaimed GDPR solution called Crystal Ball. . Off the work, I enjoy writing technical articles and talking at developer meetups and conferences. My subject of interest broadly lies in areas like Machine Learning Interpretability, Full-Stack Data Science. . Github | LinkedIn | Twitter | ResearchGate | Email | . Timeline: . PyImageSearch (June, 2019 - present) | DataCamp (August 2018 - June 2019) (on contract) | TCS Research and Innovation (January 2018 - August 2018) | Tata Consultancy Services Limited (July 2017 - January 2018) | CareerIn (Dec, 2016 - Feb, 2017) (intern) | . Badges I proudly endorse: . . . An honour to be their son 🙂 . Tapas Kumar Paul | Baby Paul | .",
          "url": "https://sayak.dev/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Authoring",
          "content": "Co-authored a book Hands-On Python Deep Learning for the Web with Anubhav Singh (Packt Publishers). . Authored a liveProject namely Use Machine Learning to Detect Phishing Websites with Manning Publishers. . Below are the blogs, articles, and tutorials I have written on Data Science, Machine Learning and more. . Datacamp . KMeans clustering with scikit-learn - https://goo.gl/dT7kYq | DBSCAN: A macroscopic investigation in Python - https://goo.gl/fDGYUn | Hyperparameter Optimization in Machine Learning Models - https://goo.gl/5C6ouV | Towards Preventing Overfitting: Regularization - https://goo.gl/B9vxia | Ensemble Learning in Python - https://goo.gl/dmH9db | Investigating Tensors with PyTorch - https://goo.gl/yoYsVL | Introduction to Feature Selection - https://goo.gl/gY8rwy | Demystifying crucial Statistics in Python - https://goo.gl/i2Wm5v 1 | Diving Deep with Imbalanced Data - https://goo.gl/fZnYmV | Introduction to Cyclical Learning Rates - https://goo.gl/2fpkQQ | Turning Machine Learning Models into APIs in Python2 - https://goo.gl/vwzqtA | Essentials of Linear Regression in Python3 - https://goo.gl/5nuVmt | Simplifying Sentiment Analysis in Python - https://goo.gl/62mEJo | Automated Machine Learning with Auto-Keras - https://goo.gl/XEjea4 | Introduction to Indexing in SQL - https://goo.gl/7dcnE7 | Understanding Recursive Functions in Python - https://goo.gl/u1U2eH | Beginner’s Guide to Google’s Vision API in Python - https://goo.gl/VCwZa8 | Beginner’s Guide to PostgreSQL - https://goo.gl/DV1rhY | Managing Databases in PostgreSQL - https://goo.gl/YA9fAy | Working with Spreadsheets in SQL - https://goo.gl/PYUb2v | Installing PostgreSQL on Windows and Mac OS X - https://goo.gl/CyF8T4 | Using Order By Keyword in SQL - https://goo.gl/i7mD8f | Introduction to Alter Table Statement in SQL - https://goo.gl/qWi3km | SQLite in Python - https://goo.gl/wYCr4e | Introduction to Where Clause in SQL - https://goo.gl/VB3CdX | Introduction to SQL Joins - https://goo.gl/2w342W | 10 command-line utilities in PostgreSQL - https://goo.gl/xFWbRS | CASE Statements in PostgreSQL - https://bit.ly/2HWBSwu | Aggregate Functions in SQL - https://bit.ly/2GnDqg9 | Cleaning Data in SQL - http://bit.ly/2GyPdrL | Materialized Views in PostgreSQL - http://bit.ly/2VFz11x | Argument Parsing in Python - http://bit.ly/2LOWGsJ | Ten Important Updates from TensorFlow 2.0 - http://bit.ly/2EHENWL | Implementing Neural Style Transfer using TensorFlow 2.0 - http://bit.ly/2J1mmxv | TensorFlow 2.0 Case Study - http://bit.ly/2U0yjZA | . FloydHub . Introduction to Anomaly Detection in Python - https://bit.ly/2TZLg4d | Introduction to K-Means Clustering in Python with scikit-learn - https://bit.ly/2IZev5a | An introduction to Q-Learning: Reinforcement Learning - http://bit.ly/2HxuVzo | How to plan and execute your ML and DL projects - http://bit.ly/2XtMCeh | Becoming One With the Data (FloydHub) - [http://bit.ly/30N3bPA] 4 | Training Neural Nets: a Hacker’s Perspective - http://bit.ly/training-neural-nets | . Weights and Biases . Running Hyperparameter Sweeps to Pick the Best Model - http://bit.ly/2MKHR7K | arXiv Search: Generating Tags from Paper Titles - http://bit.ly/2WQ8sFh | How to Use GCP with Weights &amp; Biases - http://bit.ly/399Fd60 | Mixed precision training with tf.keras - http://bit.ly/2RIkQ9z | Customizing Training Loops in TensorFlow 2.0 - http://bit.ly/39DOmEf | Bayesian Hyperparameter Optimization - A Primer - http://bit.ly/38SqXgR | Visualize models in TensorBoard with Weights and Biases - http://bit.ly/3cCP5qq | The effects of weight initialization on neural nets - https://bit.ly/3bk34Qu | Introduction to image inpainting with deep learning - https://bit.ly/39CqTBK (Joint work with Ayush Thakur) | Kaggle Starter Kernel - Jigsaw Multilingual Toxic Comment Classification - https://bit.ly/2UQtnbB | Distributed training in tf.keras with W&amp;B - https://bit.ly/2JZkQwJ | . Others . AMA with Sayak Paul - Hacktoberfest’19 - https://fossassam.tech/post/ama-sayak/ | Predicting the publisher’s name from an article: A case study (for Google Developers Experts’ Medium Channel) - http://bit.ly/2K9TpS8 5 | A comprehensive list of data science resources for developers (for Intel DevMesh) - https://intel.ly/2J2UYSs | Detecting phishing websites using machine learning (Intel Software Innovators’ Medium Channel) - http://bit.ly/2YBvaAs | Lessons learned from a Deep Learning Hackathon (Intel Software Innovators’ Medium Channel) - http://bit.ly/2YfnZhI | Introduction to procedures and cursors in SQL (Towards Data Science) - https://bit.ly/2OTd8WF | “Reparameterization” trick in Variational Autoencoders (Towards Data Science) - https://bit.ly/2RjoWnM | . This article got featured in “Python Top 10 Articles for the Past Month (v.Oct 2018)” and secured a rank of 4. &#8617; . | This article got featured in “Machine Learning Top 10 Articles for the Past Month (v.Nov 2018)” and secured a rank of 9. &#8617; . | This article got featured in “Python Top 10 Articles for the Past Month (v.Dec 2018)” and secured a rank of 10. &#8617; . | Featured in Sebastian Ruder’s monthly newsletter. &#8617; . | This one won the ML GDE Dev Challenge &#8617; . |",
          "url": "https://sayak.dev/authoring/",
          "relUrl": "/authoring/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Education",
          "content": "(The formal ones may be) . B.Tech in IT from Netaji Subhash Engineering College (2013 - 17) (Final year dissertation: A CFS–DNN-Based Intrusion Detection System) | High School from Jadavpur Vidyapith (PCMC) (2005 - 13) | Certifications relevant to my subject of interest: Introduction to Data Science in Python (University of Michigan) | Data Scientist with Python Track (DataCamp) | Data Analyst with Python Track (DataCamp) | Deep Learning Specialization (deeplearning.ai) | Advanced Machine Learning with TensorFlow on Google Cloud Platform | TensorFlow in Practice Specialization (deeplearning.ai) | TensorFlow: Data and Deployment Specialization (deeplearning.ai) | . | .",
          "url": "https://sayak.dev/education/",
          "relUrl": "/education/",
          "date": ""
      }
      
  

  

  
      ,"page5": {
          "title": "Interviews",
          "content": "The purpose of conducting these interviews is to mainly get insights about the real-world project experiences, perspectives on learning new things, some fun facts and thereby enriching the communities in the process. I sincerely thank the interviewees for taking the time out from their busy schedules and for agreeing to do these interviews. Here are the interviews I have done so far - . An interview with Robert Crowe, Developer Advocate (TensorFlow) at Google | An interview with Snehasis Banerjee, Scientist at TCS Research and Innovation | An interview with Abhishek Kumar, Senior Manager, Data Science at Publicis Sapient | An interview with Laurence Moroney, Developer Advocate at Google | An interview with Karl Fezer, AI Ecosystem Evangelist at Arm | An interview with Dan Becker, Team Lead of Kaggle Learn &amp; Product Lead of Kaggle Kernels | An interview with Rajarshee Mitra, Data Scientist at Microsoft | An interview with Alessio, Lead Data Scientist at FloydHub | An interview with Joel Grus, Research Engineer at Allen Institute for Artificial Intelligence | An interview with Josh Tobin, Research Scientist at OpenAI | An interview with Andrew Ferlitsch, Developer Program Engineer at Google | An interview with Shalini De Mello, Principal Research Scientist at NVIDIA | An interview with Rahul Agrawal, Principal Machine Learning Manager at AI and Research, Microsoft | An interview with Aakash Nain, Research Engineer at Ola | An interview with Xander Steenbrugge, Machine Learning Researcher &amp; YouTuber at “Arxiv Insights” | An interview with Ines Montani, Co-founder at Explosion | An interview with Girish Palshikar, Principal Scientist at TCS Research and Innovation | An interview with Christoph Molnar, Interpretable Machine Learning Researcher | An interview with Leslie Smith, Senior Research Scientist at U.S. Naval Research Laboratory | An interview with Arindam Pal, Senior Research Scientist at CSIRO | An interview with Ankur Patel, Vice President of Data Science at 7Park Data | An interview with Max Pumperla, Deep Learning Engineer at Skymind | An interview with Abhishek Thakur, Data Scientist, and Kaggle 3x Grandmaster | An interview with Dmytro Mishkin, Computer Vision Researcher | An interview with Ellick Chan, Head of University Relations and Research — Intel AI Academy | An interview with Thomas Wolf, Chief Science Officer at Hugging Face | An interview with Dat Tran, Head of AI at Axel Springer AI | An interview with Daniel Seita, Ph.D. student at UC, Berkeley | An interview with Vladimir Iglovikov, Senior Computer Vision Engineer at Lyft | An interview with Hamel Husain, Staff Machine Learning Engineer at GitHub | .",
          "url": "https://sayak.dev/interviews/",
          "relUrl": "/interviews/",
          "date": ""
      }
      
  

  
      ,"page6": {
          "title": "Research",
          "content": "I am interested in the following problems (with no particular deadline). This page also enlists the publications I have been a part of. . Some research problems/problems I wish to solve: . Surveillance for water wastage: Water wastage is a vicious problem. In spite of several campaigns and infinite awareness activities, water wastage is still an avid problem. In countries like India especially in its rural areas, this problem imposes a great threat. The aim of this work is to facilitate modern image processing and information retrieval techniques to extract the relevant images from satellite image data and to build an effective surveillance system to reduce the amount of water wastage. | Information extraction from Annual Report: Most companies report their annual financial statements every year formally on their company website. This is typically published in a PDF format, with the financial data usually presented in the form of tables. The financial reports of companies are utilized by banks and other financial institutions to evaluate company performances to enable these institutions to approve loans or manage other transactions with these institutions. A huge amount of manual effort is spent by financial institutions today to fetch these financial reports and extract the financial data from reports. The objective is to automate this extraction process to minimize the manual effort. This will enable companies to increase their productivity and save considerable effort. | Generate Corporate profiles from the Web: When a company engages with their clients and establishes a relationship, it does an initial KYC (Know Your Customer), to get background information about the company and its key stakeholders and employees, like the list of C-Level executives of their client and their designations, HQ address, Phone numbers etc. The KYC is done manually by users for every client, which usually runs into hundreds of thousands of clients for some large companies. Fetching profile information from either company websites or from public search engines is a tedious effort and takes considerable time. The objective of this use case is to automate the information extraction process and save on effort and increase productivity. | Towards intelligent food safety and food distribution: Food wastage and poor quality are genuine problems in many countries like India. How can we facilitate AI techniques in order to maintain a good safety and distribution trade-off in food-care. | . *I am open to discuss/collaborate on these problems . Publications: . Paul S., Banerjee C., Ghoshal M. (2018) A CFS–DNN-Based Intrusion Detection System. In: Bera R., Sarkar S., Chakraborty S. (eds) Advances in Communication, Devices and Networking. Lecture Notes in Electrical Engineering, vol 462. Springer, Singapore. | Gupta J., Paul S., Ghosh A. (2019) A Novel Transfer Learning-Based Missing Value Imputation on Discipline Diverse Real Test Datasets—A Comparative Study with Different Machine Learning Algorithms. In: Abraham A., Dutta P., Mandal J., Bhattacharya A., Dutta S. (eds) Emerging Technologies in Data Mining and Information Security. Advances in Intelligent Systems and Computing, vol 814. Springer, Singapore. | C. Baneriee, S. Paul and M. Ghoshal, A Comparative Study of Different Ensemble Learning Techniques Using Wisconsin Breast Cancer Dataset, 2017 International Conference on Computer, Electrical &amp; Communication Engineering (ICCECE), Kolkata, India, 2017, pp. 1-6. | S. Sengupta, S. Basak, P. Saikia, S. Paul et al., A review of deep learning with special emphasis on architectures, applications and recent trends, Knowledge-Based Systems (2020) 105596, https://doi.org/10.1016/j.knosys.2020.105596. | .",
          "url": "https://sayak.dev/research/",
          "relUrl": "/research/",
          "date": ""
      }
      
  

  
  

  
  

  
      ,"page9": {
          "title": "Talks/Seminars/Workshops",
          "content": "I take the idea of learning and sharing very seriously and hence the existence of this page. I love to attend developer meetups, conferences, workshops and learn from them as much as I can. I sometimes talk on a range of topics that I love the most. All the slides of my talks/sessions can be found here. . Given by me: . Presented our paper A CFS–DNN-Based Intrusion Detection System at International Conference on Communication Devices and Networking, Sikkim Manipal Institute of Technology, Sikkim, June 3, 2017. | Presented our paper A Comparative Study of Different Ensemble Learning Techniques Using Wisconsin Breast Cancer Dataset, at International Conference on Computer, Electrical &amp; Communication Engineering, Techno India University, Kolkata, December 23, 2017. | Co-presented our paper A Novel Transfer Learning-Based Missing Value Imputation on Discipline Diverse Real Test Datasets—A Comparative Study with Different Machine Learning Algorithms at International Conference on Emerging Technologies in Data Mining and Information Security, University of Engineering and Management, Kolkata, February 23, 2018. | Spoke on Cyclical Learning Rates for training Neural Nets at DevFest Kolkata, November 3, 2018. | Conducted a hack-session on Cyclical Learning Rates at DataHack Summit (organized by Analytics Vidhya), Bangalore, November 23, 2018. | Delivered talks on Introduction to BigQuery at GDG Kolkata Cloud Study Jam (Academy of Technology), Google Cloud Next ‘19 Extended - Kolkata on April 12 and April 19, 2019 respectively. | Conducted a session on Ten Updates Introduced in TensorFlow 2.0 along with a short quiz at Google I/O Extended 2019, Kolkata, May 11, 2019. | Conducted a session on Training neural nets: A methodical approach at ML/AR Developer Day organized by GDG Kolkata and DSC HIT (May 30, 2019). Conducted the same session but in a more detailed manner at ML With The Experts - GDG Kolkata Meetup (July 7, 2019). | . | Spoke at Google I/O Extended 2019, Bhubaneswar on Ten Updates Introduced in TensorFlow 2.0, June 9, 2019. Also shared a few opportunities with the students (link to the Opportunities’ deck). | Spoke at DevFest Kolkata 2019 about how to approach the process of model deployment, August 3, 2019. My talk was titled Connecting Flutter with TensorFlow 2.0. Link to the slides, video and the GitHub repository. | Spoke at DevFest Jaipur 2019 (September 08, 2019) on Structuring Machine Learning Projects. Remotely presented on this topic at DevFest Izmir 2019 (November 23, 2019). Here’s the modified deck. | . | Spoke at Explore ML Academy on Problem Framing and How to find data set and fairness practices, September 14, 2019, Hyderabad. | Spoke at DevFest Bhubaneswar 2019 (September 22, 2019) on The Human Loop in Machine Learning. | Spoke at DevFest Goa 2019 (September 29, 2019) on Training Neural Nets: a Hacker’s Perspective. Spoke at Class III of Launchpad Accelerator India (October 16, 2019), Bangalore on an extended version of the same topic. Deck: http://bit.ly/LPA_3. | Remotely presented on this topic at DevFest Warsaw &amp; Radzymin 2019 (December 7, 2019). | . | Presented my work on Blood Cell Detection using TensorFlow Object Detection API at TensorFlow Roadshow, Bangalore (October 01, 2019). Deck: http://bit.ly/tf-roadshow-sayak. | Remotely presented my work on Predicting Publisher’s Names from Hackernews Article Titles at Global GDE Summit (October 26, 2019). Video available here (Courtesy: Akshay Bahadur). Deck: http://bit.ly/GDESummit19. | Remotely presented at Machine Learning Weekend, Turkey on Building data pipelines with tf.data (November 3, 2019). | Presented at Kaggle Days Mumbai on On the learning dynamics of neural nets (November 30, 2019). | Conducted a workshop on Applied Deep Learning using TensorFlow 2.0 and GCP (includes topics like data pipeline optimization, cyclical learning rates, mixed-precision training and so on) at Launchpad India Accelerator Bootcamp (December 12 - 13, 2019). Content available here: http://bit.ly/mlb-code-sayak. | Spoke at DevLoop on Your first machine learning project, Ganpat University, Gujrat, India (January 04, 2020). Deck: http://bit.ly/dloop20. | Spoke at Improving machine learning model on Weights and Biases for better machine learning, Bangalore (February 08, 2020). Deck: http://bit.ly/blr-wb. | Spoke at Sigma 2020 on Machine Learning: For the Community by the Community, Kolkata (February 12, 2020). | Spoke at MENA Digital Days 2020 on Building data pipelines with tf.data. Deck here, session video here. | Spoke for GDG Goa at an online event on Hello, TensorFlow. Deck here, session here. | . Co-organized by me: . Full-Stack Data Science Workshop along with The Code Foundation and GDG Kolkata, Kolkata, January 19, 2019. | DevFest Kolkata, August 3, 2019. | TensorFlow All-Around Kolkata, August 31, 2019. | Let’s Build, January 4, 2020. | from tfug import kolkata, February 15, 2020. | Kolkata Kreate, February 29, 2020. | . Note: If you are interested to invite me as a speaker for your event, please get in touch by dropping an email at spsayakpaul@gmail.com. If you are interested in having me submit a CFP first, that is absolutely fine! Please don’t hesitate to ask that. .",
          "url": "https://sayak.dev/talksseminarsworkshops/",
          "relUrl": "/talksseminarsworkshops/",
          "date": ""
      }
      
  

  
      ,"page10": {
          "title": "XYZ",
          "content": "Beta -tester of DataCamp’s course Deep Learning in Python | Taught under-privileged children and managed operations for a TCS-CSR initiative called H20 (Helping Hand Organization) | Moderator of the Artificial Intelligence channel of Campus Commune | Mentor for Smart India Hackathon 2018 and Smart India Hackathon 2019 | Advisor to Overleaf, an online LaTex platform | Contributing author at Towards Data Science | Mentor for GirlScript Summer of Code 2019 | Book reviewer at Manning Publications Co | Co-organizer at GDG Kolkata | Organizer at TensorFlow User Group Kolkata | Mentored at Launchpad Women Entrepreneurs | Mentored at Explore ML Academy, Hyderabad | Mentored at AI Hack Tunisia | Mentored at Class III (2019) of Launchpad Accelerator India (Tweet by GoogleDevsIN) | Mentored at Google Code-in for TensorFlow through December, 2019 - January 2020 (Certificate) | Mentored at Build For Digital India Bootcamps through January 2020 - February 2020 (Tweet by GoogleDevsIN) | Mentored at Explore ML Bootcamp, Hyderabad (Tweet by GoogleDevsIN) | . Non-tech: . I love listening to all genres of music. A guitar player myself. Have played in a band Behest from 2013 to 2017. | I love watching TV serieses also (Narcos, Gotham, Fringe, Seal Team, Ozark being all time favorites). | .",
          "url": "https://sayak.dev/xyz/",
          "relUrl": "/xyz/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sayak.dev/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}